Raul VerasVerasraul@gmail.comModule 1In your own words, what is a computer really doing whenever you type a letter on akeyboard? (150 words max)	A computer is idle, patiently waiting for input signal from either peripheral (keyboard or mice) to then, either match that input signal to a character in the memory set or a an action when combining character or keyboard strokes. In your own words, how do computers use input and output to create experiences? (250words max)	Computers use inputs and outputs to create experiences in the form of an interactive windows. An example may be a text editor, where the program may be waiting for you to input “x” and show you the result of “x” instantly, so you can see the output of what you input. Another example maybe be a simple computer game, where  it may be or requiring the input of a peripheral like a mice. Once, you click on an object in the screen (input), you would see the result of said action, whether correct or incorrect (output).	Explain why software products are essentially “infinitely reproducible nothings.” (150words max)	Software are essentially “infinitely reproducible nothings” because they’re just a set of instructions made to manage data. The data will become bigger but essentially the same software can be used to manage and analyze that data with some minor adjustments. Instead of recreating the software you can adjust what is analyzing or extracting from the data. For example, I can create a software that adds 2 numbers together and then I can use the same code and adjust it to plug words together to make a sentence. Same code different data.Explain in your own words how code becomes software. (150 words max)	Code becomes software by the computer analyzing a file with a set of instructions written in a human-readable code language (ie. Python, javascript, PHP) and then converting it into assembly/machine code which the computer can read and execute the instructions.Explain “algorithms” in your own words. (150 words max)	An algorithm is like a list of instructions. It is a sequence of steps needed to solve an issue or to get from point A to point B. For example, PEMDAS (parenthesis, exponents, multiplication, addition, subtraction) can be considered an algorithm because it helps you solve match equations by following certain steps. Explain the DRY principle. (100 words max)	DRY stands for “don’t repeat yourself.” The principle behind the acronym is to help you avoid repetitive or redundant pieces of code as a developer.In your own words, what is object-oriented programming? (100 words max)	Object-oriented programming is a programming paradigm. It is the idea that everything in a program is an object and every object has its own set of data (attributes) and instructions (methods). Therefore, an object can manage certain attributes or methods as long as they’re within the scope of the object.In your own words explain data and how it relates to code. (100 Words max)	Data is information, any kind of information can be data especially if it’s specific to a certain field or industry. Influencers need to know who likes their posts and who watches it but doesn’t, that’s their data. A dentist needs to know which of his patience need root canals and which ones need dental whitening, that’s the dentist’s data.What is a framework? (150 words max)	A framework is like a blueprint to develop software solutions. It helps guide developers by providing a structure and design in which to develop software/applications and helps developers save time by configuring/setting up data a developer would otherwise have to code themselves repetitively. What is debugging? (150 words max)	Debugging is the act of double checking and fixing errors (bugs) in your code. Bugs can cause errors in code in various of ways. It can be anything from wrong syntax, incorrect grammar or misspelling a function/method. Now, with more of an understanding of what code is, why do you want to learn how tocode? (500 words max)	I want to learn how to code because I would love to create software solutions to help my community and peers. There so many things that can be improved on or created that only affects and benefit certain areas that big corporations are not tackling because it’s not beneficial to their bottom-line but can be beneficial to humans overall. I’m a big believer in standing on the shoulders of those before us and I believe coding/programming is the key to that theory in the modern day. I would like to create open source solutions to help those communities where tech in general is not common or where they lack support or infrastructure. 